{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\partightenfactor0

\f0\b\fs40 \cf0 MVC \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f1\b0\fs26 \cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 The MVC is an architecture for software apps  on Swift, MVC pattern breaks an application up into three layers,\'a0
\f0\b model
\f1\b0 ,\'a0
\f0\b view
\f1\b0 , and\'a0
\f0\b controller
\f1\b0 .\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
ModelL\
\
The layer in sin charge of logics that are implemented here, reed and write data, check the state of the app and management tasks as well as networking and validation.\
\
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 View\
The second layer has not direct connection with the Model layer, this one  performs tasks as , presenting data to the user and handling user interaction.  \'93Views are dumb objects. They only know how to present data to the user. They don't know or understand what they are presenting.\'94\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 Controller\
The Third layer  the CONTROLLER  the  glued together by one or more controllers. A controller knows about the view layer as well as the model layer. instance of the\'a0\uc0\u8237 UIViewController\uc0\u8236 \'a0class or a subclass thereof.\
This often results in tight coupling, making controllers the least reusable components of an MVC application\
\
\
Separation of Concerns\
The advantage of the MVC is that the result is that controllers are frequently used for everything that doesn't clearly belong in the view layer or the model layer. and in terms of Reusability\
While controllers are often not reusable, views and models are easy to reuse. If the MVC pattern is correctly implemented, the view layer and the model layer should be composed of reusable components.\
\
In the other hand the View controllers normally is a big place were commonly IOS developers put everything that not belong in the other two components that makes  it a big file.\
\
\
\
}